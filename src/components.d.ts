/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Map, MapboxEvent, PopupOptions } from "mapbox-gl";
import { AlpacaEvent, Target } from "./components/itinerary-map/itinerary-map";
export { Map, MapboxEvent, PopupOptions } from "mapbox-gl";
export { AlpacaEvent, Target } from "./components/itinerary-map/itinerary-map";
export namespace Components {
    interface ItineraryMap {
        "alpacaAccessToken": string;
        "disableMouseoverPopup": boolean;
        "displayIndicatedFeaturePopup": (item: Target, options?: { position?: [number, number]; popup?: PopupOptions; }) => Promise<void>;
        "getMapboxApi": () => Promise<Map>;
        "initialFitBoundsPadding": string;
        "itineraryId": string;
        "mapboxAccessToken": string;
        "removeIndicatedFeaturePopup": () => Promise<void>;
    }
}
export interface ItineraryMapCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLItineraryMapElement;
}
declare global {
    interface HTMLItineraryMapElement extends Components.ItineraryMap, HTMLStencilElement {
    }
    var HTMLItineraryMapElement: {
        prototype: HTMLItineraryMapElement;
        new (): HTMLItineraryMapElement;
    };
    interface HTMLElementTagNameMap {
        "itinerary-map": HTMLItineraryMapElement;
    }
}
declare namespace LocalJSX {
    interface ItineraryMap {
        "alpacaAccessToken"?: string;
        "disableMouseoverPopup"?: boolean;
        "initialFitBoundsPadding"?: string;
        "itineraryId"?: string;
        "mapboxAccessToken"?: string;
        "onAlpaca"?: (event: ItineraryMapCustomEvent<AlpacaEvent>) => void;
        "onMapbox"?: (event: ItineraryMapCustomEvent<MapboxEvent>) => void;
    }
    interface IntrinsicElements {
        "itinerary-map": ItineraryMap;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "itinerary-map": LocalJSX.ItineraryMap & JSXBase.HTMLAttributes<HTMLItineraryMapElement>;
        }
    }
}
